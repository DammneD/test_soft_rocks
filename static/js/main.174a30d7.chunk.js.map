{"version":3,"sources":["api/users.ts","components/ModalWindow/ModalWindow.tsx","components/UserInfo/UserInfo.tsx","components/UserCreate/UserCreate.tsx","components/UserList/UserList.tsx","App.tsx","index.tsx"],"names":["USERS_URL","loadUsers","a","fetch","response","ok","Error","status","statusText","json","users","loadUser","id","user","uploadUser","upload","method","headers","body","JSON","stringify","updateUser","userData","update","ModalWindow","setPrevState","handleSubmit","deleteItem","setModalVisible","className","type","onClick","UserInfo","useState","name","username","email","phone","website","setUser","isDisabled","setIsDisabled","isModalVisible","temp","setTemp","dataToUpdate","setdataToUpdate","isReturnButtodDisabled","setisReturnButtodDisabled","changeButtonText","inputName","getUser","useEffect","handleChange","event","target","value","state","changeInput","isUpdateFromApi","to","onSubmit","preventDefault","htmlFor","disabled","onChange","UserCreate","getUsers","setName","setUserName","setMail","isRequired","setIsRequired","length","newUser","placeholder","UserList","getUserId","setUsers","userId","setUserId","reverse","map","href","deleteUser","filter","person","App","path","element","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.174a30d7.chunk.js","sourcesContent":["import { CreatedUser, updatedUser, User } from \"../types\";\n\nconst USERS_URL = 'https://mate.academy/students-api/users';\n\nexport async function loadUsers():Promise<User[]> {\n  const response = await fetch(USERS_URL);\n\n  if (!response.ok) {\n    throw new Error(`Opps... ${response.status}: ${response.statusText}`);\n  }\n\n  const users = await response.json();\n\n  return users;\n};\n\nexport async function loadUser(id: number):Promise<User> {\n  const response = await fetch(`${USERS_URL}/${id}`);\n\n  if (!response.ok) {\n    throw new Error(`Opps... ${response.status}: ${response.statusText}`);\n  }\n\n  const user = await response.json();\n\n  return user;\n};\n\nexport async function uploadUser(user: CreatedUser) {\n  const upload = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json; charset=UTF-8',\n    },\n    body: JSON.stringify(user)\n  }\n\n  try {\n    await fetch(USERS_URL, upload);\n  } catch (error) {\n    throw new Error(`Opps... ${error}`);\n  }\n};\n\nexport async function deleteUser(id: number) {\n  try {\n    await fetch(`${USERS_URL}/${id}`, {method: 'DELETE'});\n  } catch (error) {\n    throw new Error(`Opps... ${error}`);\n  }\n};\n\nexport async function updateUser(userData: updatedUser) {\n  const update = {\n    method: 'PATCH',\n    headers: {\n      'Content-Type': 'application/json; charset=UTF-8',\n    },\n    body: JSON.stringify(userData)\n  }\n  try {\n    await fetch(`${USERS_URL}/${userData.id}`, update);\n  } catch (error) {\n    throw new Error(`Opps... ${error}`);\n  }\n};\n","import React from \"react\";\nimport './ModalWindow.scss'\n\ninterface Props {\n  setModalVisible: (arg: boolean) => void;\n  deleteItem?: () => void;\n  handleSubmit?: () => void;\n  setPrevState?: () => void;\n}\n\nexport const ModalWindow: React.FC<Props> = ({ setPrevState, handleSubmit, deleteItem, setModalVisible }) => {\n\n  const handleYesClick = () => {\n    if (deleteItem) {\n      deleteItem();\n    }\n    if (handleSubmit) {\n      handleSubmit()\n    }\n  }\n\n  const handleNoClick = () => {\n    if (setPrevState) {\n      setPrevState()\n    }\n    setModalVisible(false)\n  }\n\n  return (\n    <div className=\"modal\">\n      <div className=\"modal__content\">\n        <h3 className=\"modal__title\">Are you shure?</h3>\n        <div className=\"modal__buttons\">\n          <button\n            className=\"button\"\n            type=\"button\"\n            onClick={handleYesClick}\n          >\n            Yes\n          </button>\n          <button\n            className=\"button\"\n            type=\"button\"\n            onClick={handleNoClick}\n          >\n            No\n          </button>\n        </div>\n      </div>\n    </div>\n  )\n}","import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { loadUser, updateUser } from '../../api/users';\nimport { User } from '../../types';\nimport { ModalWindow } from '../ModalWindow/ModalWindow';\nimport './UserInfo.scss'\n\ninterface Props {\n  id: number;\n}\n\ntype UserKey = 'name' | 'username' | 'email' | 'phone' | 'website';\n\nexport const UserInfo: React.FC<Props> = ({ id }) => {\n  const [user, setUser] = useState<User>({\n    id,\n    name: '',\n    username: '',\n    email: '',\n    phone: '',\n    website: '',\n  });\n  const [isDisabled, setIsDisabled] = useState({\n    name: true,\n    username: true,\n    email: true,\n    phone: true,\n    website: true,\n  });\n  const [isModalVisible, setModalVisible] = useState(false);\n  const [temp, setTemp] = useState({});\n  const [dataToUpdate, setdataToUpdate] = useState({});\n  const [isReturnButtodDisabled, setisReturnButtodDisabled] = useState(true);\n\n  const changeButtonText = (inputName: UserKey) => isDisabled[inputName] ? 'Change' : 'Apply';\n\n  const getUser = async () => {\n    const user = await loadUser(id)\n    setUser(user)\n  };\n\n  useEffect(() => {\n      getUser();\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  const handleSubmit = () => {\n    updateUser({ \n      id, \n      ...dataToUpdate});\n    setisReturnButtodDisabled(false)\n    setModalVisible(false);\n  }\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const {name, value} = event.target;\n\n    setUser(state => ({ ...state, [name]: value }))\n  }\n\n  const changeInput = (inputName: UserKey) => {\n    if (isDisabled[inputName]) {\n      setTemp({ [inputName]: user[inputName] ? user[inputName] : '' })\n      setIsDisabled({\n        name: true,\n        username: true,\n        email: true,\n        phone: true,\n        website: true,\n        [inputName]: false\n      });\n      setPrevState();\n    }\n    if (!isDisabled[inputName]) {\n      setModalVisible(true)\n      setdataToUpdate({ [inputName]: user[inputName] })\n      setIsDisabled(state => ({ ...state, [inputName]: true }));\n    }\n  }\n\n  const setPrevState = (isUpdateFromApi?: boolean) => {\n    setUser(state => ({ ...state, ...temp }));\n    setModalVisible(false);\n\n    if (isUpdateFromApi) {\n      updateUser({ id, ...temp });\n      setisReturnButtodDisabled(true)\n    }\n  }\n\n  return (\n    <>\n    <h2 className=\"home-link\">\n      <Link to=\"/\" className=\"link\">\n        {`> Click to go back <`}\n      </Link>\n    </h2>\n    <form\n      method=\"POST\"\n      className=\"infoForm\"\n      onSubmit={(event => event.preventDefault())}\n    >\n      <label htmlFor=\"name\" className=\"infoForm__label\">\n        Name:\n        <input\n          className=\"infoForm__field\"\n          id=\"name\"\n          disabled={isDisabled.name}\n          name=\"name\"\n          type=\"text\"\n          value={user.name}\n          onChange={handleChange}\n        />\n        <button\n          type=\"button\"\n          className=\"button\"\n          onClick={() => changeInput(\"name\")}\n        >\n          {changeButtonText(\"name\")}\n        </button>\n      </label>\n\n      <label htmlFor=\"surname\" className=\"infoForm__label\">\n        Surname:\n        <input\n          className=\"infoForm__field\"\n          id=\"surname\"\n          disabled={isDisabled.username}\n          name=\"username\"\n          type=\"text\"\n          value={user.username}\n          onChange={handleChange}\n        />\n        <button\n          type=\"button\"\n          onClick={() => changeInput(\"username\")}\n          className=\"button\"\n        >\n          {changeButtonText(\"username\")}\n        </button>\n      </label>\n\n      <label htmlFor=\"email\" className=\"infoForm__label\">\n        Email:\n        <input\n          className=\"infoForm__field\"\n          id=\"email\"\n          disabled={isDisabled.email}\n          name=\"email\"\n          type=\"text\"\n          value={user.email}\n          onChange={handleChange}\n        />\n        <button\n          type=\"button\"\n          className=\"button\"\n          onClick={() => changeInput(\"email\")}\n        >\n          {changeButtonText(\"email\")}\n        </button>\n      </label>\n\n      <label htmlFor=\"phone\" className=\"infoForm__label\">\n        Phone:\n        <input\n          className=\"infoForm__field\"\n          id=\"phone\"\n          disabled={isDisabled.phone}\n          name=\"phone\"\n          type=\"text\"\n          value={user.phone}\n          onChange={handleChange}\n        />\n        <button\n          type=\"button\"\n          className=\"button\"\n          onClick={() => changeInput(\"phone\")}\n        >\n          {changeButtonText(\"phone\")}\n        </button>\n      </label>\n\n      <label htmlFor=\"website\" className=\"infoForm__label\">\n        Website:\n        <input\n          className=\"infoForm__field\"\n          id=\"website\"\n          disabled={isDisabled.website}\n          name=\"website\"\n          type=\"text\"\n          value={user.website}\n          onChange={handleChange}\n        />\n        <button\n          type=\"button\"\n          className=\"button\"\n          onClick={() => changeInput(\"website\")}\n        >\n          {changeButtonText(\"website\")}\n        </button>\n      </label>\n      <button\n        className=\"infoForm__button button\"\n        disabled={isReturnButtodDisabled}\n        type=\"button\"\n        onClick={() => setPrevState(true)}\n      >\n        Return last changed value\n      </button>\n    </form>\n    {isModalVisible\n      && <ModalWindow\n        setModalVisible={setModalVisible}\n        handleSubmit={handleSubmit}\n        setPrevState={setPrevState}\n      />\n    }\n    </>\n  )\n}\n\n","import React, { useState } from 'react';\nimport { uploadUser } from '../../api/users';\nimport './UserCreate.scss'\n\ninterface Props {\n  getUsers: () => void;\n}\n\nexport const UserCreate: React.FC<Props> = ({ getUsers }) => {\n  const [name, setName] = useState('');\n  const [username, setUserName] = useState('');\n  const [email, setMail] = useState('');\n  const [isRequired, setIsRequired] = useState(false);\n\n  const clearInput = () => {\n    setName('');\n    setUserName('');\n    setMail('');\n  }\n\n  const handleSubmit = async (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (name.length) {\n      const newUser = {\n        name,\n        username,\n        email,\n      };\n  \n      await uploadUser(newUser);\n      getUsers();\n      clearInput();\n    }\n\n    setIsRequired(true);\n  }\n\n  return (\n    <form\n        method=\"GET\"\n        className=\"creationForm\"\n        onSubmit={handleSubmit}\n      >\n        <fieldset className=\"creationForm__wrap\">\n          <legend>Add new contact</legend>\n          <label htmlFor=\"newName\" className=\"creationForm__label\">\n            Name*:\n            <input\n              className={`creationForm__field ${isRequired && 'active'}`}\n              placeholder=\"Enter name\"\n              id=\"newName\"\n              type=\"text\"\n              value={name}\n              onChange={(event) => {\n                setName(event.target.value)\n                setIsRequired(false)\n              }}\n            />\n          </label>\n\n          <label htmlFor=\"newSurname\" className=\"creationForm__label\">\n            Surname:\n            <input\n              className=\"creationForm__field\"\n              placeholder=\"Enter surname\"\n              id=\"newSurname\"\n              type=\"text\"\n              value={username}\n              onChange={(event) => setUserName(event.target.value)}\n            />\n          </label>\n\n          <label htmlFor=\"newEmail\" className=\"creationForm__label\">\n            Mail:\n            <input\n              className=\"creationForm__field\"\n              placeholder=\"myMail@mail.com\"\n              id=\"newEmail\"\n              type=\"text\"\n              value={email}\n              onChange={(event) => setMail(event.target.value)}\n            />\n          </label>\n\n          <button\n            className=\"creationForm__button button\"\n            type=\"submit\"\n          >\n            Add user\n          </button>\n        </fieldset>\n      </form>\n  )\n}","import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { deleteUser, loadUsers } from '../../api/users';\nimport { User } from '../../types';\nimport { ModalWindow } from '../ModalWindow/ModalWindow';\nimport { UserCreate } from '../UserCreate/UserCreate';\nimport './UserList.scss'\n\ninterface Props {\n  getUserId: (id: number) => void;\n}\n\nexport const UserList: React.FC<Props> = ({ getUserId }) => {\n  const [users, setUsers] = useState<User[]>([]);\n  const [isModalVisible, setModalVisible] = useState(false);\n  const [userId, setUserId] = useState(0);\n\n  const getUsers = async () => {\n    const users = await loadUsers()\n    setUsers(users.reverse())\n  };\n\n  useEffect(() => {\n    getUsers();\n  }, [])\n\n  const deleteItem = () => {\n    deleteUser(userId)\n    setUsers(users.filter(person => person.id !== userId))\n    setModalVisible(false)\n  }\n\n  const handleClick = (id: number) => {\n    setUserId(id)\n    setModalVisible(true)\n  }\n\n\n  return (\n    <div className=\"users\">\n      <UserCreate \n        getUsers={getUsers}\n      />\n      <ul className=\"users__list\">\n        {users.map(user => (\n          <li key={user.id} className=\"users__list_item\">\n            <div className=\"users__info-block\">\n              <h3 className=\"users__list_title\">{user.name}</h3>\n              {user.email\n                && (\n                  <p className=\"users__list_mail\">Mail:&nbsp;\n                    <a href={`mailto:${user.email}`} className=\"link\">\n                      {user.email}\n                    </a>\n                  </p>\n                )\n              }\n            </div>\n            <div className=\"users__button-block\">\n              <Link\n                className=\"users__info-button button link\"\n                to={`user/${user.id}`}\n                onClick={() => getUserId(user.id)}\n              >\n                User details\n              </Link>\n              <button\n                className=\"users__delete-button button\"\n                type=\"button\"\n                onClick={() => handleClick(user.id)}\n              >\n                Delete\n              </button>\n            </div>\n          </li>\n        ))}\n      </ul>\n      {isModalVisible && <ModalWindow\n        setModalVisible={setModalVisible}\n        deleteItem={deleteItem}\n      />}\n    </div>\n  )\n}\n","import React, { useState } from 'react';\nimport { Routes, Route } from 'react-router-dom';\n\nimport './App.scss';\nimport { UserInfo } from './components/UserInfo/UserInfo';\nimport { UserList } from './components/UserList/UserList';\n\nexport const App: React.FC = () => {\n  const [userId, setUserId] = useState(0);\n\n  const handleClick = (id: number) => {\n    setUserId(id);\n  }\n\n  return (\n  <div>\n    <Routes>\n      <Route path=\"/\" element={\n        <UserList\n          getUserId={handleClick}\n        />}\n      />\n      <Route path={`user/${userId}`} element={\n        <UserInfo\n          id={userId}\n        />}\n      />\n    </Routes>\n  </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}