{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/UserCreate/UserCreate.tsx","components/UserList/UserList.tsx","App.tsx","index.tsx"],"names":["USERS_URL","loadUsers","a","fetch","response","ok","Error","status","statusText","json","users","uploadUser","user","upload","method","headers","body","JSON","stringify","id","userData","update","UserInfo","useState","name","setName","username","setUserName","email","setEmail","phone","setPhone","website","setWebsite","className","onSubmit","event","preventDefault","updateUser","htmlFor","type","value","onChange","target","onClick","UserCreate","getUsers","setMail","handleSubmit","newUser","UserList","handleClick","setUsers","reverse","useEffect","map","href","to","deleteUser","filter","person","App","userId","setUserId","setUser","path","element","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.012635b4.chunk.js","sourcesContent":["import { CreatedUser, updatedUser, User } from \"../types\";\n\nconst USERS_URL = 'https://mate.academy/students-api/users';\n\nexport async function loadUsers():Promise<User[]> {\n  const response = await fetch(USERS_URL);\n\n  if (!response.ok) {\n    throw new Error(`Opps...${response.status} - ${response.statusText}`);\n  }\n\n  const users = await response.json();\n\n  return users;\n};\n\nexport async function uploadUser(user: CreatedUser) {\n  const upload = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json; charset=UTF-8',\n    },\n    body: JSON.stringify(user)\n  }\n\n  await fetch(USERS_URL, upload);\n};\n\nexport async function deleteUser(id: number) {\n  await fetch(`${USERS_URL}/${id}`, {method: 'DELETE'});\n};\n\nexport async function updateUser(userData: updatedUser) {\n    const update = {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json; charset=UTF-8',\n      },\n      body: JSON.stringify(userData)\n    }\n  \n    await fetch(`${USERS_URL}/${userData.id}`, update);\n};\n","import React, { useState } from 'react';\nimport { updateUser } from '../../api/users';\nimport { updatedUser } from '../../types';\nimport './UserInfo.scss'\n\ninterface Props {\n  user: updatedUser;\n}\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const [name, setName] = useState(user.name);\n  const [username, setUserName] = useState(user.username);\n  const [email, setEmail] = useState(user.email);\n  const [phone, setPhone] = useState(user.phone);\n  const [website, setWebsite] = useState(user.website);\n  const [temp, setTemp] = useState({});\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault()\n    updateUser({ id: user.id, name, username, email, phone, website})\n  }\n\n  return (\n    user && (\n      <form\n        method=\"POST\"\n        className=\"info__form\"\n        onSubmit={handleSubmit}\n      >\n        <label htmlFor=\"name\">\n          Name:\n          <input\n            name=\"\"\n            type=\"text\"\n            value={name}\n            onChange={(event) => setName(event.target.value)}\n          />\n          <button type=\"button\" onClick={() => setName('')}>❌</button>\n        </label>\n\n        <label htmlFor=\"username\">\n          Surname:\n          <input\n            name=\"\"\n            type=\"text\"\n            value={username}\n            onChange={(event) => setUserName(event.target.value)}\n          />\n          <button type=\"button\" onClick={() => setUserName('')}>❌</button>\n        </label>\n\n        <label htmlFor=\"email\">\n          Email:\n          <input\n            name=\"\"\n            type=\"text\"\n            value={email}\n            onChange={(event) => setEmail(event.target.value)}\n          />\n          <button type=\"button\" onClick={() => setEmail('')}>❌</button>\n        </label>\n\n        <label htmlFor=\"phone\">\n          Phone:\n          <input\n            name=\"\"\n            type=\"text\"\n            value={phone}\n            onChange={(event) => setPhone(event.target.value)}\n          />\n          <button type=\"button\" onClick={() => setPhone('')}>❌</button>\n        </label>\n\n        <label htmlFor=\"website\">\n          Website:\n          <input\n            name=\"\"\n            type=\"text\"\n            value={website}\n            onChange={(event) => setWebsite(event.target.value)}\n          />\n          <button type=\"button\" onClick={() => setWebsite('')}>❌</button>\n        </label>\n        <button type=\"submit\">\n          update\n        </button>\n      </form>\n    )\n  )\n}\n\n","import React, { useState } from 'react';\nimport { uploadUser } from '../../api/users';\n\ninterface Props {\n  getUsers: () => void;\n}\n\nexport const UserCreate: React.FC<Props> = ({ getUsers }) => {\n  const [name, setName] = useState('');\n  const [username, setUserName] = useState('');\n  const [email, setMail] = useState('');\n\n  const clearInput = () => {\n    setName('');\n    setUserName('');\n    setMail('');\n  }\n\n  const handleSubmit = async (event: React.FormEvent) => {\n    const newUser = {\n      name,\n      username,\n      email,\n    };\n\n    event.preventDefault();\n    await uploadUser(newUser);\n    getUsers();\n    clearInput();\n  }\n\n  return (\n    <form\n        method=\"GET\"\n        className=\"addUserForm\"\n        onSubmit={handleSubmit}\n      >\n        <label htmlFor=\"name\">\n          Name:\n          <input\n            type=\"text\"\n            value={name}\n            onChange={(event) => setName(event.target.value)}\n          />\n        </label>\n\n        <label htmlFor=\"surname\">\n          Surname:\n          <input\n            type=\"text\"\n            value={username}\n            onChange={(event) => setUserName(event.target.value)}\n          />\n        </label>\n\n        <label htmlFor=\"mail\">\n          Mail:\n          <input\n            type=\"text\"\n            value={email}\n            onChange={(event) => setMail(event.target.value)}\n          />\n        </label>\n\n        <button type=\"submit\">\n          Add user\n        </button>\n      </form>\n  )\n}","import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { deleteUser, loadUsers } from '../../api/users';\nimport { User } from '../../types';\nimport { UserCreate } from '../UserCreate/UserCreate';\nimport './UserList.scss'\n\ninterface Props {\n  handleClick: (user: User) => void;\n}\n\nexport const UserList: React.FC<Props> = ({ handleClick }) => {\n  const [users, setUsers] = useState<User[]>([]);\n\n  const getUsers = async () => {\n    const users = await loadUsers()\n    setUsers(users.reverse())\n  };\n\n  useEffect(() => {\n    getUsers();\n  }, [])\n\n\n\n  return (\n    <div className=\"users\">\n      <UserCreate \n        getUsers={getUsers}\n      />\n      <ul className=\"users__list\">\n        {users.map(user => (\n          <li key={user.id}>\n            <h2>{user.name}</h2>\n            <a\n              href={`mailto:${user.email}`}\n            >\n                {user.email}\n            </a>\n              <Link\n                to={`/test_soft_rocks/user/${user.id}`}\n                onClick={() => handleClick(user)}\n              >\n                Learn more\n              </Link>\n            <button\n              type=\"button\"\n              onClick={() => {\n                deleteUser(user.id)\n                setUsers(users.filter(person => person.id !== user.id))\n              }}\n            >\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  )\n}\n","import React, { useState } from 'react';\nimport { Routes, Link, Route } from 'react-router-dom';\n\nimport './App.scss';\nimport { UserInfo } from './components/UserInfo/UserInfo';\nimport { UserList } from './components/UserList/UserList';\nimport { User } from './types';\n\nexport const App: React.FC = () => {\n  const [userId, setUserId] = useState(0);\n  const [user, setUser] = useState({});\n\n  const handleClick = (user: User) => {\n    setUserId(user.id);\n    setUser(user)\n  }\n\n  return (\n  <div>\n    <h1>\n      <Link to=\"/test_soft_rocks/\">\n        Home\n      </Link>\n    </h1>\n    \n    <Routes>\n      <Route path=\"/test_soft_rocks/\" element={\n        <UserList\n          handleClick={handleClick}\n        />}\n      />\n      <Route path={`/test_soft_rocks/user/${userId}`} element={<UserInfo \n        user={user}\n      />} />\n    </Routes>\n  </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}